x: i64 = 57
y := x
y = 34

{
    y = 77
    z: i32 = 10
}

z := y

result: i64 = -((7 + 3) * 2) + 40

result = 0

if result != 0
{
    result = 2
}

if z - 77 != 0
{
    result = 5
    result = 3 * result
}
else if result != 0
{
    result = 42
}
else if z + 77 != 0
{
    if false
    {
        result = 43
    }
    else if z - 77 != 0
    {
        result = 44
    }
    else
    {
        result = 45
    }
}
else
{
    result = 9
}

sum_0: i64 = 0
index_0: i64 = 10
for index_0 > 0
{
    sum_0 = sum_0 + index_0
    index_0 = index_0 - 1
}

sum_1: i64 = 0
for index_1: i64 = 10, index_1 > 0, index_1 = index_1 - 1
{
    sum_1 = sum_1 + index_1
}

/*
  Multi-line comment

  /*
    Nested multi-line comment!
  */

  // multi-line close */

  str := "multi-line close */"
*/

my_bool: bool
my_bool = 3 <= 4
//return my_bool

assert(true == false, "True is not false")

array: i32[8]
array[5] = 4
array[3] = array[5]

//return increment_fourth_element(^array)[3]

//inc_arr := increment_fourth_element(^array)
//return inc_arr[3]

return pow(array[3], 3)

increment_fourth_element := proc(arr: ^i32[8]) -> i32[8]
{
    arr[3] = arr[3] + 1
    return arr^
}

// Raises num to the power of exp
pow := proc(num: i32, exp: i64) -> i32
{
    result := num

    for exp > 1
    {
        result = result * num
        exp = exp - 1
    }

    return result
}

assert := proc(assertion: bool, message: string) -> bool
{
    if assertion == false
    {
        print("Assertion failed: ")
        print(message)
        exit(1)
    }

    return true
}
